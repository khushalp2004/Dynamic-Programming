
////brute force approach using recursion
int sol(int n){
        if(n<0){
            return 0;
        }
        if(n<=2){
            return n;
        }
        int one_step=sol(n-1);
        int two_step=sol(n-2);

        return one_step+two_step;
    }
    int climbStairs(int n) {
        return sol(n);///this recursive function will cause TLE because of O(2^N) time Complexity
    }

    ////Memoization of the recursion
    int dp[46];
    int sol(int n){
        if(n<0){
            return 0;
        }
        if(n<=2){
            return n;
        }
        if(dp[n]!=-1){
            return dp[n];
        }
        int one_step=sol(n-1);
        int two_step=sol(n-2);

        dp[n]=one_step+two_step;

        return dp[n];
    }
    int climbStairs(int n) {
        memset(dp,-1,sizeof(dp));
        return sol(n);/////here recursion is memoized to recover the TLE causing because of recursion.....
    }