
/////646. Maximum Length of Pair Chain
///method -1
/////sort the first element and use dp for the solution
int findLongestChain(vector<vector<int>>& pairs) {
        sort(pairs.begin(),pairs.end());
        int n=pairs.size();

        vector<int> dp(n,1);
        for(int i=0;i<n;i++){
            for(int j=0;j<i;j++){
                if(pairs[j][1]<pairs[i][0]){
                    dp[i]=max(dp[i],dp[j]+1);
                }
            }
        }

        return *max_element(dp.begin(),dp.end());
    }

//method-2 
///using greedy approach we can solve it 
///by using second element which is the optimal solution
int findLongestChain(vector<vector<int>>& pairs) {
        sort(pairs.begin(),pairs.end(),[](auto &a, auto &b){
            return a[1]<b[1];
        });
        int current=INT_MIN;
        int ans=0;

        for(auto &p: pairs){
            if(p[0]>current){
                ans++;
                current=p[1];
            }
        }

        return ans;
    }